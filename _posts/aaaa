(2시부터 4시까지) Drone에 집중하라는 이야기에 대해서 나재근 책임, 김윤상 사원과 논의하기 
   --> TODO: 내 생각은?


---layout: post
title: 문자열 매칭 - KMP 알고리즘에 대한 이해와 구현 
description: 문자열 매칭 - KMP 알고리즘에 대한 이해와 구현
modified: 2015-08-10
tags: [algorithm]
image:
  feature: abstract-11.png
link: http://dol9.tistory.com/122
---

보이어-무어 알고리즘은 문자열(S[M])과 패턴 문자열(P[N])이 일치하는 지 검사하는 패턴 매칭 알고리즘으로, KMP 알고리즘과 함께 성능이 좋은 알고리즘으로 알려져 있다. 

아이디어는 간단하다. 문자열과 패턴 문자열을 비교할때 패턴 문자열의 맨 뒤 문자 위치를 비교하고, 다르면  문자열을 일정 길이만큼 skip해서 비교를 계속하는 것이다. 	


그림: http://www.laurentluce.com/images/blog/stringobject/5.png

pseudo code는 다음과 같다. 

SkipTable[256]; //256 ASCII charset 저장

generateSkipTable(P[], n)
  SkipTable을 n으로 초기화 //패턴에 없는 문자일 경우 무조건 패턴 문자열 길이만큼 skip하도록
  loop i <- P[]  
     SkipTable[P[i]] = n - 1 - i  //패턴에 있는 문자일 경우 패턴의 끝과 그 문자와의 거리만큼을 skip 길이로 지정

search(S[], m, P[], n) //S: 문자열, m: S의 길이, P:패턴 문자열, n; P의 길이
  index = n - 1 // 패턴 문자열의 마지막부터 비교 
  loop (index < m)
	if S[index] == P[n-1] 
		if strcmp(S[index - n + 1], P[], n == 0
			return index - n + 1; //found
        index = index + SkipTable[S[index]];
  return -1 //not found
		
   


J는 25
